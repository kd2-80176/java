package tester;
import java.util.Scanner;
import com.app.fruits.Apple;
import com.app.fruits.Fruit;
import com.app.fruits.Mango;
import com.app.fruits.Orange;

public class FruitBasket {
		
		public static int menu()
		{
			int choice;
			System.out.println("********************************************************************");
			System.out.println("0.EXIT");
			System.out.println("1.Add Mango");
			System.out.println("2.Add Orange");
			System.out.println("3.Add Apple");
			System.out.println("4.Display names of all fruits in the basket");
			System.out.println("5.Display name,color,Weight,taste of all fresh fruit,in the bucket");
			System.out.println("6.Display tastes of all stale(not fresh) fruits in the basket");
			System.out.println("7.Mark a fruit as stale");
			System.out.println("8.Mark all sour fruits stale");
			System.out.print("ENTER YOUR CHOICE=");
			Scanner sc=new Scanner(System.in);
			choice=sc.nextInt();
			System.out.println("********************************************************************");

			return choice;
			
			
		}
		public static void main(String[] args)
		{ 
			Scanner sc=new Scanner(System.in);
			
			int choice;
			int size;
			int index=0;
			System.out.println("enter the size of an array=");
			size=sc.nextInt();
			Fruit basket[]=new Fruit[size];
			while((choice=menu())!=0) 
			{
				
				switch(choice) {
				case 1:
					
					if(size>index)
					{
						basket[index]=new Mango();
						basket[index].accept();
						
						index++;
					}
					else
						System.out.println("array is full....");
					
					break;
				case 2:
					
					if(size>index)
					{
						basket[index]=new Orange();
						basket[index].accept();
						index++;
					}
					else
						System.out.println("array is full....");
					break;
				case 3:
					
					if(size>index)
					{
						basket[index]=new Apple();
						basket[index].accept();
						index++;
					}
					else
						System.out.println("array is full....");
					
					break;
				case 4:
					System.out.println("********************************************************************");
                     
					for(Fruit fruit:basket)
						if(fruit!=null)
						System.out.println("name="+ fruit.getName());
						else
							System.out.println("object is null");
					System.out.println("********************************************************************");

					break;
				case 5:
					System.out.println("********************************************************************");

					for(Fruit fruit:basket)
						if(fruit!=null) {

						if(fruit.isFresh())
						System.out.println("element"+ fruit.toString());
						else 
							System.out.println("fruit is not fresh");
						}
						else 
						System.out.println("object is null");
					System.out.println("********************************************************************");

					break;
				case 6:
					for(Fruit fruit:basket)
						if(!fruit.isFresh())
							System.out.println("element"+ fruit.toString());
						else 
							System.out.println("all fruit are fresh");
							
					break;
				case 7:
					int x;
					for(Fruit fruit:basket) {
						System.out.println("do you want mark as a stale");
						System.out.println("1.yes");
						System.out.println("2.yes");
                     x=sc.nextInt();
                     if(x==1)
                     {
                    	 fruit.setFresh(false);
                    	 System.out.println("succefully mark as a stale");
                     }
                     
					}
					
					break;
				case 8:
					for(Fruit fruit:basket) 
					{
					if(fruit.taste()=="sour") {
						fruit.setFresh(false);
						System.out.println("succefully mark as a stale");
					}	
					}
					break;				
					
				
				}
				
			}
			
		}
		

	}
